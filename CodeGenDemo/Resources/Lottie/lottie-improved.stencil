// swiftlint:disable all
// Generated using SwiftGen â€” https://github.com/SwiftGen/SwiftGen

{% if files %}
{% set accessModifier %}{% if param.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% set enumName %}{{param.enumName|default:"Lottie"}}{% endset %}
import Foundation
import Lottie

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length

// MARK: - Implementation Details

{{accessModifier}} struct {{enumName}} {
  let name: String
  let width: CGFloat
  let height: CGFloat

  func makeView() -> LOTAnimationView {
    return LOTAnimationView(lottie: self)
  }
}

{{accessModifier}} extension LOTAnimationView {
  init(lottie: {{enumName}}, fixSize: Bool = true) {
    self.init(name: lottie.name, bundle: Bundle(for: BundleToken.self))
    if fixSize {
      NSLayoutConstraint.activate([
        self.widthAnchor.constraint(equalToConstant: lottie.width),
        self.heightAnchor.constraint(equalToConstant: lottie.height)
      ])
    }
  }
}

// MARK: - Lotties

// swiftlint:disable identifier_name line_length number_separator type_body_length
{{accessModifier}} extension {{enumName}} {
  {% for file in files %}
  {% set width %}{{file.documents.first.data["w"]}}{% endset %}
  {% set height %}{{file.documents.first.data["h"]}}{% endset %}
  static let {{file.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}} = Lottie(name: "{{file.name}}", width: {{width}}, height: {{height}})
  {% endfor %}
}
// swiftlint:enable identifier_name line_length number_separator type_body_length

private final class BundleToken {}
{% else %}
// No files found
{% endif %}

