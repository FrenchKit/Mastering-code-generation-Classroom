{% for type in types.implementing.AutoStringProperties %}

extension {{ type.name}} {
  static let stringProperties: [String] = [
    {% for prop in type.storedVariables where prop.typeName.name == "String" %}
    L10n.{{ type.name }}.{{ prop.name }},
    {% endfor %}
  ]

  subscript(propertyIndex idx: Int) -> String {
    get {
      switch idx+1 {
      {% for prop in type.storedVariables where prop.typeName.name == "String" %}
      case {{ forloop.counter }}: return self.{{ prop.name }}
      {% endfor %}
      default: fatalError("Out of bounds")
      }
    }
    set {
      switch idx+1 {
      {% for prop in type.storedVariables where prop.typeName.name == "String" %}
      case {{ forloop.counter }}: self.{{ prop.name }} = newValue
      {% endfor %}
      default: fatalError("Out of bounds")
      }
    }
  }
}
{% endfor %}
